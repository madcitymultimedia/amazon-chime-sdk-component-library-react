{"version":3,"file":"components-ui-Select-Select-stories.7507cb84.iframe.bundle.js","mappings":";;AA8EA;;;;ACpCA;AA3BA;;;AA8BA;;;;;;;;;;AACA;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;;;;;;;;AClDA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AAWA;AACA;;;;;AAKA;AACA;;;AAGA;AACA","sources":["webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Select/Select.stories.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Flex/Styled.tsx","webpack://amazon-chime-sdk-component-library-react/./src/components/ui/Select/Styled.tsx"],"sourcesContent":["\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-expect-error (Converted from ts-ignore)\n    var __STORY__ = \"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\\n// SPDX-License-Identifier: Apache-2.0\\n\\nimport React from 'react';\\nimport styled from 'styled-components';\\n\\nimport Flex from '../Flex';\\nimport Select from './';\\n\\nexport default {\\n  title: 'UI Components/Form/Select',\\n  component: Select,\\n};\\n\\nconst options = [\\n  {\\n    value: 'no_fruit_selected',\\n    label: 'Select an option',\\n  },\\n  {\\n    value: 'bananas',\\n    label: 'Bananas',\\n  },\\n  {\\n    value: 'oranges',\\n    label: 'Oranges',\\n  },\\n  {\\n    value: 'grapefruit',\\n    label: 'Grapefruit',\\n  },\\n];\\n\\nconst StyledSelect = styled(Select)`\\n  width: 10rem;\\n`;\\n\\nexport const BasicSelect = (args) => {\\n  return (\\n    <Flex layout=\\\"fill-space-centered\\\">\\n      <StyledSelect\\n        value={args.value}\\n        options={options}\\n        aria-label=\\\"basic select input\\\"\\n        onChange={(e: any) => {\\n          console.log(e.target.value);\\n        }}\\n      />\\n    </Flex>\\n  );\\n};\\n\\nBasicSelect.argTypes = {\\n  value: {\\n    control: 'select',\\n    options: options.map((option) => option.value),\\n    mapping: options.reduce((mapping, option) => {\\n      mapping[option.label] = option.value;\\n      return mapping;\\n    }, {}),\\n  },\\n  options: { table: { disable: true } },\\n  onChange: { table: { disable: true } },\\n};\\n\\nBasicSelect.args = {\\n  value: 'no_fruit_selected',\\n};\\n\\nBasicSelect.story = {\\n  name: 'Basic select',\\n};\\n\";\n    // @ts-expect-error (Converted from ts-ignore)\n    var __LOCATIONS_MAP__ = {\n  \"BasicSelect\": {\n    \"startLoc\": {\n      \"col\": 27,\n      \"line\": 28\n    },\n    \"endLoc\": {\n      \"col\": 1,\n      \"line\": 34\n    },\n    \"startBody\": {\n      \"col\": 27,\n      \"line\": 28\n    },\n    \"endBody\": {\n      \"col\": 1,\n      \"line\": 34\n    }\n  }\n};\n    \n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Flex from '../Flex';\nimport Select from './';\nexport default {parameters: {\n  \"storySource\": {\n    \"source\": \"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\\n// SPDX-License-Identifier: Apache-2.0\\n\\nimport React from 'react';\\nimport styled from 'styled-components';\\nimport Flex from '../Flex';\\nimport Select from './';\\nexport default {\\n  title: 'UI Components/Form/Select',\\n  component: Select\\n};\\nconst options = [{\\n  value: 'no_fruit_selected',\\n  label: 'Select an option'\\n}, {\\n  value: 'bananas',\\n  label: 'Bananas'\\n}, {\\n  value: 'oranges',\\n  label: 'Oranges'\\n}, {\\n  value: 'grapefruit',\\n  label: 'Grapefruit'\\n}];\\nconst StyledSelect = styled(Select)`\\n  width: 10rem;\\n`;\\nexport const BasicSelect = args => {\\n  return <Flex layout=\\\"fill-space-centered\\\">\\n      <StyledSelect value={args.value} options={options} aria-label=\\\"basic select input\\\" onChange={(e: any) => {\\n      console.log(e.target.value);\\n    }} />\\n    </Flex>;\\n};\\nBasicSelect.argTypes = {\\n  value: {\\n    control: 'select',\\n    options: options.map(option => option.value),\\n    mapping: options.reduce((mapping, option) => {\\n      mapping[option.label] = option.value;\\n      return mapping;\\n    }, {})\\n  },\\n  options: {\\n    table: {\\n      disable: true\\n    }\\n  },\\n  onChange: {\\n    table: {\\n      disable: true\\n    }\\n  }\\n};\\nBasicSelect.args = {\\n  value: 'no_fruit_selected'\\n};\\nBasicSelect.story = {\\n  name: 'Basic select'\\n};\\nBasicSelect.parameters = {\\n  ...BasicSelect.parameters,\\n  docs: {\\n    ...BasicSelect.parameters?.docs,\\n    source: {\\n      originalSource: \\\"args => {\\\\n  return <Flex layout=\\\\\\\"fill-space-centered\\\\\\\">\\\\n      <StyledSelect value={args.value} options={options} aria-label=\\\\\\\"basic select input\\\\\\\" onChange={(e: any) => {\\\\n      console.log(e.target.value);\\\\n    }} />\\\\n    </Flex>;\\\\n}\\\",\\n      ...BasicSelect.parameters?.docs?.source\\n    }\\n  }\\n};\",\n    \"locationsMap\": {\n      \"basic-select\": {\n        \"startLoc\": {\n          \"col\": 27,\n          \"line\": 28\n        },\n        \"endLoc\": {\n          \"col\": 1,\n          \"line\": 34\n        },\n        \"startBody\": {\n          \"col\": 27,\n          \"line\": 28\n        },\n        \"endBody\": {\n          \"col\": 1,\n          \"line\": 34\n        }\n      }\n    }\n  }\n,},\n  title: 'UI Components/Form/Select',\n  component: Select\n};\nconst options = [{\n  value: 'no_fruit_selected',\n  label: 'Select an option'\n}, {\n  value: 'bananas',\n  label: 'Bananas'\n}, {\n  value: 'oranges',\n  label: 'Oranges'\n}, {\n  value: 'grapefruit',\n  label: 'Grapefruit'\n}];\nconst StyledSelect = styled(Select)`\n  width: 10rem;\n`;\nexport const BasicSelect = args => {\n  return <Flex layout=\"fill-space-centered\">\n      <StyledSelect value={args.value} options={options} aria-label=\"basic select input\" onChange={(e: any) => {\n      console.log(e.target.value);\n    }} />\n    </Flex>;\n};\nBasicSelect.argTypes = {\n  value: {\n    control: 'select',\n    options: options.map(option => option.value),\n    mapping: options.reduce((mapping, option) => {\n      mapping[option.label] = option.value;\n      return mapping;\n    }, {})\n  },\n  options: {\n    table: {\n      disable: true\n    }\n  },\n  onChange: {\n    table: {\n      disable: true\n    }\n  }\n};\nBasicSelect.args = {\n  value: 'no_fruit_selected'\n};\nBasicSelect.story = {\n  name: 'Basic select'\n};\nBasicSelect.parameters = {\n  ...BasicSelect.parameters,\n  docs: {\n    ...BasicSelect.parameters?.docs,\n    source: {\n      originalSource: \"args => {\\n  return <Flex layout=\\\"fill-space-centered\\\">\\n      <StyledSelect value={args.value} options={options} aria-label=\\\"basic select input\\\" onChange={(e: any) => {\\n      console.log(e.target.value);\\n    }} />\\n    </Flex>;\\n}\",\n      ...BasicSelect.parameters?.docs?.source\n    }\n  }\n};","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled, { css } from 'styled-components';\n\nimport { baseSpacing, baseStyles } from '../Base';\nimport { FlexProps } from './';\n\nexport const fillSpace = css`\n  display: flex;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const fillSpaceCentered = css`\n  ${fillSpace};\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const equalColumns = css`\n  display: flex;\n  flex-direction: row;\n  height: 100%;\n  align-items: stretch;\n\n  > * {\n    flex-grow: 1;\n    flex-basis: 50%;\n  }\n`;\n\nexport const stack = css`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  > * {\n    width: 100%;\n  }\n`;\n\nconst layoutMap = {\n  'fill-space': fillSpace,\n  'fill-space-centered': fillSpaceCentered,\n  'equal-columns': equalColumns,\n  stack,\n};\n\nexport const StyledFlex = styled.div<FlexProps>`\n  align-items: ${(props) => props.alignItems};\n  display: ${(props) => (props.container ? 'flex' : 'block')};\n  flex: ${(props) => props.flex || ''};\n  flex-basis: ${(props) => props.flexBasis};\n  flex-direction: ${(props) => props.flexDirection};\n  flex-grow: ${(props) => props.flexGrow || ''};\n  flex-shrink: ${(props) => props.flexShrink};\n  flex-wrap: ${(props) => props.flexWrap};\n  justify-content: ${(props) => props.justifyContent};\n\n  // layout variants\n  ${(props) => !!props.layout && layoutMap[props.layout]}\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n","// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n\nimport styled from 'styled-components';\n\nimport { baseSpacing, baseStyles } from '../Base';\n\nexport const StyledWrapper = styled.div`\n  position: relative;\n\n  .ch-select-icon {\n    pointer-events: none;\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n\nexport const StyledSelectInput = styled.select`\n  background-color: ${(props) => props.theme.inputs.bgd};\n  border: ${(props) => props.theme.inputs.border};\n  border-radius: ${(props) => props.theme.inputs.borderRadius};\n  box-shadow: ${(props) => props.theme.inputs.shadow};\n  color: ${(props) => props.theme.inputs.fontColor};\n  font-size: ${(props) => props.theme.fontSizes.text.fontSize};\n  line-height: ${(props) => props.theme.fontSizes.text.lineHeight};\n  height: 2rem;\n  letter-spacing: -0.005625rem;\n  width: 100%;\n  padding: 0.375rem 1.5rem 0.375rem 0.5rem;\n  transition: box-shadow 0.05s ease-in;\n  display: inline-block;\n  appearance: none;\n\n  &:focus,\n  &[aria-invalid='true']:focus {\n    border: ${(props) => props.theme.inputs.focus.border};\n    box-shadow: ${(props) => props.theme.inputs.focus.shadow};\n    outline: none;\n  }\n\n  &[aria-invalid='true'] {\n    border: ${(props) => props.theme.inputs.error.border};\n    box-shadow: ${(props) => props.theme.inputs.error.shadow};\n  }\n\n  ${baseSpacing}\n  ${baseStyles}\n`;\n"],"names":[],"sourceRoot":""}